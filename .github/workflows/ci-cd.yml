name: Al Fozan Insights Platform CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Frontend Tests
  frontend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm install --legacy-peer-deps

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next/

  # Backend Tests
  backend-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Test backend server
        run: |
          cd backend
          python -c "import simple_app; print('Backend imports successfully')"

      - name: Validate API endpoints
        run: |
          cd backend
          python -c "
          from simple_app import app
          with app.test_client() as client:
              response = client.get('/api/projects')
              assert response.status_code == 200
              print('API endpoints working')
          "

  # Security Scanning
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  # Deploy to Staging
  deploy-staging:
    needs: [frontend-test, backend-test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Frontend to Vercel (Staging)
        run: |
          npm i -g vercel
          vercel --token=${{ secrets.VERCEL_TOKEN }} --prod --confirm

      - name: Deploy Backend to Render (Staging)
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}

  # Deploy to Production
  deploy-production:
    needs: [frontend-test, backend-test, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Frontend to Vercel (Prod)
        run: |
          npm i -g vercel
          vercel --token=${{ secrets.VERCEL_TOKEN }} --prod --confirm

      - name: Deploy Backend to Render (Prod)
        run: | 
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
